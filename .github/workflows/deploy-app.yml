name: deploy-app

on:
  workflow_dispatch

env:
  RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}        
  CLUSTER_NAME: ${{ vars.AZURE_CLUSTER_NAME }}
  PROD_REGISTRY: ${{ vars.PROD_REGISTRY }}
  PROD_APP_IMAGE_REPO: ${{ vars.PROD_APP_IMAGE_REPO }}
  PROD_APP_IMAGE_TAG: ${{ vars.PROD_APP_IMAGE_TAG }}
  PROD_UTILITY_IMAGE_REPO: ${{ vars.PROD_UTILITY_IMAGE_REPO }}
  PROD_UTILITY_IMAGE_TAG: ${{ vars.PROD_UTILITY_IMAGE_TAG }}

jobs:
  deploy-myapp-to-k8s:
    runs-on: ubuntu-latest
    steps:
    - name: Display environment
      run: |
          echo "PROD_REGISTRY: $PROD_REGISTRY"
          echo "PROD_APP_IMAGE_REPO: $PROD_APP_IMAGE_REPO"
          echo "PROD_APP_IMAGE_TAG: $PROD_APP_IMAGE_TAG"
          echo "PROD_UTILITY_IMAGE_REPO: $PROD_UTILITY_IMAGE_REPO"
          echo "PROD_UTILITY_IMAGE_TAG: $PROD_UTILITY_IMAGE_TAG"
          echo "RESOURCE_GROUP: $RESOURCE_GROUP"
          echo "CLUSTER_NAME: $CLUSTER_NAME"
    - uses: actions/checkout@v4
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Gets K8s context
      uses: azure/aks-set-context@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
      id: login

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Create or update Kubernetes secret for ghcr.io
      run: |
        kubectl create secret docker-registry demo-ghcr-secrets \
          --docker-server=${{ env.PROD_REGISTRY }} \
          --docker-username=${{ github.actor }} \
          --docker-password=${{ secrets.CR_PAT }} \
          --dry-run=client -o yaml | kubectl apply -n gatekeeper-system -f -
      
    - name: Bake helm charts
      uses: azure/k8s-bake@v1
      with:
        renderEngine: helm
        silent: 'false'
        helmChart: ./charts/mychart
        overrides: |
          image.repository:${{ env.PROD_REGISTRY }}/${{ env.PROD_APP_IMAGE_REPO }}
          image.tag:${{ env.PROD_APP_IMAGE_TAG }}
          fluentd.image.repository:${{ env.PROD_REGISTRY }}/${{ env.PROD_UTILITY_IMAGE_REPO }}
          fluentd.image.tag:${{ env.PROD_UTILITY_IMAGE_TAG }}
          imagePullSecrets: |
            demo-ghcr-secrets
      id: bake

    - name: Deploy application
      uses: azure/k8s-deploy@v4
      with:
        action: deploy
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
            ${{ env.PROD_REGISTRY }}/${{ env.PROD_APP_IMAGE_REPO }}:${{ env.PROD_APP_IMAGE_TAG }}
            ${{ env.PROD_REGISTRY }}/${{ env.PROD_UTILITY_IMAGE_REPO }}:${{ env.PROD_UTILITY_IMAGE_TAG }}
        imagepullsecrets: |
          demo-ghcr-secrets 
