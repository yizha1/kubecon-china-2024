name: build-myapp

on:
  workflow_dispatch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

env:
  CATALOG_REGISTRY: ${{ vars.CATALOG_REGISTRY }}
  BASE_IMAGE_REPO: ${{ vars.BASE_IMAGE_REPO }}
  BASE_IMAGE_TAG: ${{ vars.BASE_IMAGE_TAG }}
  UTILITY_IMAGE_REPO: ${{ vars.UTILITY_IMAGE_REPO }}
  UTILITY_IMAGE_TAG: ${{ vars.UTILITY_IMAGE_TAG }}
  NONPROD_REGISTRY: ${{ vars.NONPROD_REGISTRY }}
  APP_IMAGE_REPO: ${{ vars.APP_IMAGE_REPO }}
  APP_IMAGE_TAG: ${{ vars.APP_IMAGE_TAG }}

jobs:
  verify-images-signatures:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Display environment
        run: |
          echo "CATALOG_REGISTRY: $CATALOG_REGISTRY"
          echo "BASE_IMAGE_REPO: $BASE_IMAGE_REPO"
          echo "BASE_IMAGE_TAG: $BASE_IMAGE_TAG"
          echo "UTILITY_IMAGE_REPO: $UTILITY_IMAGE_REPO"
          echo "UTILITY_IMAGE_TAG: $UTILITY_IMAGE_TAG"
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Setup Notation CLI
        uses: notaryproject/notation-action/setup@v1
      - name: Validate the signature of the image
        uses: notaryproject/notation-action/verify@v1
        with:
          target_artifact_reference: |-
           ${{ env.CATALOG_REGISTRY }}/${{ env.BASE_IMAGE_REPO }}:${{ env.BASE_IMAGE_TAG }}
           ${{ env.CATALOG_REGISTRY }}/${{ env.UTILITY_IMAGE_REPO }}:${{ env.UTILITY_IMAGE_TAG }}
          trust_policy: ".github/trustpolicy/build-stage/trustpolicy.json"
          trust_store: ".github/truststore"
  build-myapp:
    needs: verify-images-signatures
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Display environment
        run: |
          echo "NONPROD_REGISTRY: $NONPROD_REGISTRY"
          echo "APP_IMAGE_REPO: $APP_IMAGE_REPO"
          echo "APP_IMAGE_TAG: $APP_IMAGE_TAG"
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push the myapp image
        uses: docker/build-push-action@v5
        with:
          context: ./src
          push: true
          tags: ${{ env.NONPROD_REGISTRY }}/${{ env.APP_IMAGE_REPO }}:${{ env.APP_IMAGE_TAG }}
          build-args: |
            BASE_IMAGE=${{ env.CATALOG_REGISTRY }}/${{ env.BASE_IMAGE_REPO }}:${{ env.BASE_IMAGE_TAG }}
  # sign-myapp
